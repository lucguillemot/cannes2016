library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.ny(x)&x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect <- c(11,2,NA)
vect2 <- c(11,2,NA)
vect <- c(foo=11, bar=2, norf=NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
q()
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
as.list(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
cls_vect
class(cls_vect)
sum(flag$orange)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(unique_vals, length)
sapply(unique_vals, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
str(flags)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
my_vector <- 1:"0"
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_vector <- my_matrix
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames, my_data)
?colnames
my_data <- colnames(cnames)
colnames(my_data) <- cnames
my_data
exit()
q()
library(datasets)
airquality
hist(airquality$Ozone)
rug(airquality$Ozone)
hist(airquality$Ozone, breaks=50)
hist(airquality$Ozone, breaks=100)
with(subset(airquality, Month==5),points(Wind, Ozone, col="blue"))
quartz()
dev.off()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
diet
str(nlme)
str(BodyWeight)
?llines
?splom
?trellis.par.set
?print.trellis
?par
library(datasets)
data(airquality)
qplot(Ozone, Wind, data=airquality)
library(ggplot2)
qplot(Ozone, Wind, data=airquality)
qplot(Ozone, Wind, data=airquality, color=Month)
qplot(Ozone, Wind, data=airquality, facets=.~Month)
qplot(Ozone, Wind, data=airquality, facets=.~factor(Month)
qplot(Ozone, Wind, data=airquality, facets=.~factor(Month))
airquality=transform(airquality, Month=factor(Month))
qplot(Ozone, Wind, data=airquality, facets=.~Month)
library(movies)
library(Movies)
data(movies)
qplot(votes, rating, data=movies)
qplot(votes, rating, data=movies)+geom_smotth()
qplot(votes, rating, data=movies)+geom_smooth()
load("~/Documents/DOCUMENTS/RESEARCH/postdoc/maps/FR2015/data/RG2015/RG2015.RData")
load("~/Documents/DOCUMENTS/RESEARCH/postdoc/maps/FR2015/data/RG2015/RG2015.RData")
quantile(RG2015$PCfn, probs=c(0.2,0.4,0.6,0.8,1))
max(RG2015$PCfn)
?rev
setwd("~/Documents/research/postdoc/maps/CANNES2016/data")
ca <- read.csv("cannes2016.csv")
ca <- read.csv("cannes2016.csv")
View(ca)
ca <- read.csv("cannes2016.csv")
View(ca)
ca <- read.csv("cannes2016.csv")
View(ca)
rev(ca)
ca2 <- rev(ca)
View(ca2)
ca2 <- rev(ca[3:25])
View(ca2)
ca2 <- rev(ca[3:30])
View(ca2)
cannes <- cbind(ca[1:2], ca2)
View(cannes)
write.csv(cannes, "cannes2016.csv")
cannes <- cbind(ca[2], ca2)
write.csv(cannes, "cannes2016.csv", row.names = FALSE)
cannes <- cbind(ca[2], ca2)
write.csv(cannes, "cannes2016.csv", row.names = FALSE)
ca <- read.csv("ca.csv")
ca2 <- rev(ca[3:30])
cannes <- cbind(ca[2], ca2)
write.csv(cannes, "cannes2016.csv", row.names = FALSE)
ca <- read.csv("ca.csv")
ca2 <- rev(ca[3:30])
cannes <- cbind(ca[2], ca2)
write.csv(cannes, "cannes2016.csv", row.names = FALSE)
library(reshape2)
?melt
melt(cannes)
cannes <- melt(ca3)
ca <- read.csv("ca.csv")
ca2 <- rev(ca[3:30])
ca3 <- cbind(ca[2], ca2)
cannes <- melt(ca3)
View(cannes)
write.csv(cannes, "cannes2016.csv", row.names = FALSE)
library(jsonlite)
?TOJson
?toJSON
ca <- read.csv("ca.csv")
ca2 <- rev(ca[3:30])
ca3 <- cbind(ca[2], ca2)
ca4 <- melt(ca3)
ca5 <- toJSON(ca4)
ca5
ca5 <- toJSON(ca4, pretty = TRUE)
ca5
write(ca5, "cannes2016.json")
CA$PAYS
ca$PAYS
write.csv(ca$PAYS, "pays.csv")
write.csv(ca$PAYS, "pays.csv", row.names = FALSE)
t(ca)
library(dplyr)
ca6 <- ca %>% t
View(ca6)
ca6 <- t(ca)
View(ca6)
ca6[1]
ca6[, 1]
ca6[1, ]
ca6 <- as.data.frame(t(ca))
View(ca6)
row.names(ca6)
write.csv(row.names(ca6), "years.csv")
write.csv(row.names(ca6), "years.csv", row.names = FALSE)
ca6 <- as.data.frame(t(ca2))
write.csv(row.names(ca6), "years.csv", row.names = FALSE)
years <- row.names(ca6)
years <- as.vector(row.names(ca6))
years <- as.character(row.names(ca6))
years
years <- as.data.frame(row.names(ca6))
View(years)
years[, 1]
years[, 1] <- 1989:2016
View(years)
years <- as.data.frame(row.names(ca6))
View(years)
years[, 2] <- 1989:2016
View(years)
write.csv(years, "years-correspondance.csv", row.names = FALSE)
years[, 2] <- c(1989:2016)
View(years)
write.csv(years, "years-correspondance.csv", row.names = FALSE)
years[, 2] <- as.character(c(1989:2016))
write.csv(years, "years-correspondance.csv", row.names = FALSE)
# BERLIN
be <- read.csv("be.csv")
be2 <- rev(be[3:30])
be3 <- cbind(be[2], be2)
be4 <- melt(be3)
be5 <- toJSON(be4, pretty = TRUE)
write(be5, "berlin.json")
# VENISE
ve <- read.csv("ve.csv")
ve2 <- rev(ve[3:30])
ve3 <- cbind(ve[2], ve2)
ve4 <- melt(ve3)
ve5 <- toJSON(ve4, pretty = TRUE)
write(ve5, "venise.json")
View(ve4)
View(ve)
# VENISE
ve <- read.csv("ve.csv")
ve2 <- rev(ve[3:30])
ve3 <- cbind(ve[2], ve2)
ve4 <- melt(ve3)
ve5 <- toJSON(ve4, pretty = TRUE)
write(ve5, "venise.json")
View(ve4)
mo <- read.csv("mo.csv")
mo2 <- rev(mo[3:30])
mo3 <- cbind(mo[2], mo2)
mo4 <- melt(mo3)
mo5 <- toJSON(mo4, pretty = TRUE)
write(mo5, "moscou.json")
View(mo4)
lo <- read.csv("lo.csv")
lo2 <- rev(lo[3:30])
lo3 <- cbind(lo[2], lo2)
lo4 <- melt(lo3)
lo5 <- toJSON(lo4, pretty = TRUE)
write(lo5, "locarno.json")
lo <- read.csv("lo.csv")
lo2 <- rev(lo[3:30])
lo3 <- cbind(lo[2], lo2)
lo4 <- melt(lo3)
lo5 <- toJSON(lo4, pretty = TRUE)
write(lo5, "locarno.json")
# LOCARNO
lo <- read.csv("lo.csv")
lo2 <- rev(lo[3:30])
lo3 <- cbind(lo[2], lo2)
lo4 <- melt(lo3)
lo5 <- toJSON(lo4, pretty = TRUE)
write(lo5, "locarno.json")
View(lo4)
# CANNES - UN CERTAIN REGARD
ucr <- read.csv("ucr.csv")
ucr2 <- rev(ucr[3:30])
ucr3 <- cbind(ucr[2], ucr2)
ucr4 <- melt(ucr3)
ucr5 <- toJSON(ucr4, pretty = TRUE)
write(ucr5, "uncertainregard.json")
ucr <- read.csv("ucr.csv")
# CANNES - UN CERTAIN REGARD
ucr <- read.csv("ucr.csv")
ucr2 <- rev(ucr[3:12])
ucr3 <- cbind(ucr[2], ucr2)
ucr4 <- melt(ucr3)
ucr5 <- toJSON(ucr4, pretty = TRUE)
write(ucr5, "uncertainregard.json")
View(ucr4)
ucr6 <- as.data.frame(t(ucr2))
years_ucr <- as.data.frame(row.names(ucr6))
years_ucr[, 2] <- as.character(c(2006:2016))
write.csv(row.names(ucr6), "years_ucr.csv", row.names = FALSE)
write.csv(years_ucr, "years_ucr-correspondance.csv", row.names = FALSE)
ucr6 <- as.data.frame(t(ucr2))
years_ucr <- as.data.frame(row.names(ucr6))
years_ucr[, 2] <- as.character(c(2006:2015))
write.csv(row.names(ucr6), "years_ucr.csv", row.names = FALSE)
write.csv(years_ucr, "years_ucr-correspondance.csv", row.names = FALSE)
# CANNES - REGROUPEMENTS
ca_reg <- read.csv("ca2.csv")
ca_reg2 <- rev(ca_reg[3:12])
ca_reg3 <- cbind(ca_reg[2], ca_reg2)
ca_reg4 <- melt(ca_reg3)
ca_reg5 <- toJSON(ca_reg4, pretty = TRUE)
write(ca_reg5, "cannes2.json")
View(ca_reg4)
# CANNES - REGROUPEMENTS
ca_reg <- read.csv("ca2.csv")
ca_reg2 <- rev(ca_reg[3:30])
ca_reg3 <- cbind(ca_reg[2], ca_reg2)
ca_reg4 <- melt(ca_reg3)
ca_reg5 <- toJSON(ca_reg4, pretty = TRUE)
write(ca_reg5, "cannes2.json")
View(ca_reg)
View(ca_reg)
# CANNES - REGROUPEMENTS
ca_reg <- read.csv("ca2.csv")
ca_reg2 <- rev(ca_reg[3:30])
ca_reg3 <- cbind(ca_reg[2], ca_reg2)
ca_reg4 <- melt(ca_reg3)
ca_reg5 <- toJSON(ca_reg4, pretty = TRUE)
write(ca_reg5, "cannes2.json")
write.csv(ca_reg$PAYS, "pays.csv", row.names = FALSE)
write.csv(ca$PAYS, "pays.csv", row.names = FALSE)
write.csv(ca_reg$PAYS, "pays_reg.csv", row.names = FALSE)
# CANNES
ca <- read.csv("ca.csv")
View(ca)
ca2 <- rev(ca[4:13])
View(ca2)
ca3 <- cbind(ca[2], ca2)
View(ca3)
ca4 <- melt(ca3)
ca5 <- toJSON(ca4, pretty = TRUE)
ca6 <- as.data.frame(t(ca2))
years <- as.data.frame(row.names(ca6))
years[, 2] <- as.character(c(1989:2016))
write.csv(row.names(ca6), "years.csv", row.names = FALSE)
write.csv(years, "years-correspondance.csv", row.names = FALSE)
write.csv(ca$PAYS, "pays.csv", row.names = FALSE)
write.csv(cannes, "cannes.csv", row.names = FALSE)
write(ca5, "cannes.json")
years <- as.data.frame(row.names(ca6))
View(years)
years[, 2] <- as.character(c(1989:2016))
years[, 2] <- as.character(c(2006:2015))
View(years)
write.csv(row.names(ca6), "years.csv", row.names = FALSE)
write.csv(years, "years-correspondance.csv", row.names = FALSE)
write.csv(as.character(row.names(ca6)), "years.csv", row.names = FALSE)
write.csv(as.character(years[, 1]), "years.csv", row.names = FALSE)
ca <- read.csv("ca.csv")
ca2 <- rev(ca[4:13])
View(ca2)
View(ca)
ca$CODE <- NULL
View(ca)
countries <- ca$PAYS
ca <- read.csv("ca.csv")
countries <- ca$PAYS
ca$CODE <- NULL
ca$PAYS <- NULL
View(ca)
ca2 <- rev(ca)
ca <- read.csv("ca.csv")
ca2 <- rev(ca[4:13])
View(ca2)
View(ca)
ca.sel <- ca[4:13]
ca <- read.csv("ca.csv")
ca <- ca[1:13]
View(ca)
ca.cc <- complete.cases(ca[3:13])
ca.cc <- ca[complete.cases(ca[3:13]), ]
View(ca.cc)
row_sub = apply(ca[3:13], 1, function(row) all(row !=0 ))
ca.cc <- ca[row_sub,]
View(ca.cc)
ca[!!rowSums(abs(ca[-c(1:2)])),]
ca[rowSums(ca == 0) != ncol(ca),]
ca[!!rowSums(abs(ca[-c(1:2)])),]
# CANNES
ca <- read.csv("ca.csv")
ca <- ca[1:13]
ca.cc <- ca[!!rowSums(abs(ca[-c(1:2)])),]
View(ca.cc)
ca2 <- rev(ca.cc[4:13])
View(ca2)
ca3 <- cbind(ca[2], ca2)
View(ca2)
View(ca.cc)
ca3 <- cbind(ca.cc$PAYS, ca2)
View(ca3)
ca4 <- melt(ca3)
View(ca4)
ca5 <- toJSON(ca4, pretty = TRUE)
ca6 <- as.data.frame(t(ca2))
View(ca6)
years <- as.data.frame(row.names(ca6))
View(years)
years[, 2] <- as.character(c(2006:2015))
View(years)
write.csv(ca.cc$PAYS, "pays.csv", row.names = FALSE)
write.csv(cannes, "cannes.csv", row.names = FALSE)
write(ca5, "cannes.json")
ca4[1]
names(ca3[1]) <- "PAYS"
View(ca3)
names(ca3[1]) <- c("PAYS")
View(ca3)
names(ca3[,1]) <- c("PAYS")
View(ca3)
names(ca3[,1])
names(ca3)
names(ca3$ca.cc$PAYS) <- c("PAYS")
names(ca3["ca.cc$PAYS"]) <- c("PAYS")
View(ca3)
names(ca3["ca.cc$PAYS"])
names(ca3["ca.cc$PAYS"]) <- c("PAYS")
ca3
colnames(ca3)[1] <- "PAYS"
View(ca3)
ca4 <- melt(ca3)
ca5 <- toJSON(ca4, pretty = TRUE)
ca6 <- as.data.frame(t(ca2))
write.csv(ca.cc$PAYS, "pays.csv", row.names = FALSE)
write.csv(cannes, "cannes.csv", row.names = FALSE)
write(ca5, "cannes.json")
write.csv(ca.cc$PAYS, "cannes_countries.csv", row.names = FALSE)
ucr <- read.csv("ucr.csv")
View(ucr)
ucr <- read.csv("ucr.csv")
View(ucr)
ca <- read.csv("ca.csv")
ca <- ca[1:13]
View(ca)
ucr.cc <- ucr[!!rowSums(abs(ucr[-c(1:2)])),]
View(ucr.cc)
View(ucr.cc)
ca.cc <- ca[!!rowSums(abs(ca[-c(1:2)])),]
View(ca.cc)
ucr2 <- rev(ucr.cc[3:12])
View(ucr2)
ucr3 <- cbind(ucr.cc$PAYS, ucr2)
View(ucr3)
colnames(ucr3)[1] <- "PAYS"
View(ucr3)
ucr4 <- melt(ucr3)
ucr5 <- toJSON(ucr4, pretty = TRUE)
years_ucr <- as.data.frame(row.names(ucr6))
years_ucr[, 2] <- as.character(c(2006:2015))
write(ucr5, "uncertainregard.json")
ucr6 <- as.data.frame(t(ucr2))
write.csv(row.names(ucr6), "years_ucr.csv", row.names = FALSE)
write.csv(years_ucr, "years_ucr-correspondance.csv", row.names = FALSE)
write.csv(ucr.cc$PAYS, "ucr_countries.csv", row.names = FALSE)
synt <- read.csv("synthese.csv")
View(synt)
syntJS <- toJSON(synt)
write(syntJS, "synthese.json")
syntJS <- toJSON(synt, pretty = T)
write(syntJS, "synthese.json")
synt <- read.csv("synthese.csv")
synt2 <- melt(synt)
syntJS <- toJSON(synt2, pretty = T)
write(syntJS, "synthese.json")
synt.cc <- synt[!!rowSums(abs(synt[-c(1:2)])),]
View(synt.cc)
synt2 <- melt(synt)
View(synt2)
synt2 <- melt(synt)
syntJS <- toJSON(synt2, pretty = T)
write(syntJS, "synthese.json")
synt.countries <- synt$PAYS
write.csv(synt.countries, "synt_countries.csv")
write.csv(synt.countries, "synt_countries.csv", row.names = FALSE)
synt.festivals <- colNames(synt.cc)
?colnames
synt.festivals <- colnames(synt.cc)
synt.festivals
synt.festivals <- colnames(synt.cc[2:7])
synt.festivals
write.csv(synt.festivals, "synt_festivals.csv", row.names = FALSE)
